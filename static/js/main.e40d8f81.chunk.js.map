{"version":3,"sources":["components/Card.js","components/CardList.js","components/searchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","robotsJs","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","CardList","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBACIC,IAAI,QACJC,IAAG,+BAA0BJ,EAAK,GAA/B,cACP,6BAAKD,IACL,4BAAIE,QCeDI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChB,OACI,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIT,GAAIM,EAAOG,GAAGT,GACdD,KAAMO,EAAOG,GAAGV,KAChBE,MAAOK,EAAOG,GAAGR,OAHZQ,SCGdC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAM,SACNC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,YCqCJC,G,wDAnCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACTC,SAAU,GACVnB,YAAa,IAJP,E,gEAQM,IAAD,OACfoB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACI,SAAUK,S,+BAMlC,IAAD,EAC6BC,KAAKP,MAA/BC,EADH,EACGA,SAAUnB,EADb,EACaA,YACZ0B,EAAiBP,EAASQ,QAAO,SAAAR,GACnC,OAAOA,EAAS/B,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAE5D,OAAQT,EAASW,OAGb,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAewB,KAAKZ,iBAC/B,cAAC,EAAD,UACI,cAACkB,EAAD,CAAUpC,OAAQ+B,SAN1B,6C,GAxBMM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAM/CX,M","file":"static/js/main.e40d8f81.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, id, email}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img\n                alt='robot' \n                src={`https://robohash.org/${id + 10}?100x100`}/>\n            <h2>{name}</h2>\n            <p>{email}</p>    \n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n//props.robots\n//{robots} = props destructuracion\nconst Cardlist = ({robots}) => {\n   return (\n       <div>\n          {\n            robots.map((user, i) => {\n                return (\n                    <Card \n                        key={i} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email}\n                    />\n                );\n            })\n           }\n        </div>\n    );\n}\n\nexport default Cardlist;\n","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue' \n                type= 'search' \n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;           ","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style = {{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/searchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robotsJs: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => this.setState({robotsJs: users})); \n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n    render() {\n        const { robotsJs, searchfield } = this.state;\n        const filteredRobots = robotsJs.filter(robotsJs => {\n            return robotsJs.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robotsJs.length?\n            <h1>LOADING</h1> :\n            (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange= {this.onSearchChange}/>\n                <Scroll>\n                    <CardList robots={filteredRobots}/>\n                </Scroll>\n            </div>\n            );\n        }\n    }\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}